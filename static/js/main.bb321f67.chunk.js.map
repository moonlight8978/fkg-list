{"version":3,"sources":["config/route-defs.ts","components/layout/layout.tsx","routes/about/about-route.tsx","types.ts","api/client.ts","api/unit-api.ts","routes/units/units.form.ts","routes/units/units.utils.ts","routes/units/components/filter-form.tsx","components/lazy-image/lazy-image.tsx","routes/units/components/unit-list.tsx","routes/units/components/sortable-col.tsx","routes/units/units-route.tsx","App.tsx","index.tsx"],"names":["routePaths","Container","styled","div","Layout","children","pathname","useLocation","className","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","classnames","active","AboutRoute","SortDirection","FormData","client","this","config","a","request","response","data","axios","create","baseURL","process","timeout","headers","Accept","UnitApi","cache","filter","fetchUnits","units","star","length","unit","includes","attribute","favorite","keyword","name","code","sort","firstUnit","secondUnit","sortDirection","ascending","sortKey","method","url","map","totalStats","hp","attack","defense","slice","validationSchema","object","string","required","array","of","number","oneOf","descending","Unit","Attribute","blue","red","violet","yellow","Favorite","book","cake","doll","jewel","initialValues","fromQuery","query","params","queryString","parse","form","q","rarity","flat","order","validateYupSchema","then","cast","catch","yupErrors","errors","yupToFormErrors","Object","fromEntries","entries","attr","value","pick","toQuery","stringify","attributeText","favoriteText","Select","select","getSelectValue","toString","defaultValue","FilterForm","useFormikContext","handleChange","values","htmlFor","placeholder","multiple","onChange","document","lazyLoadInstance","LazyLoad","UnitImage","src","placeholderSrc","props","useEffect","update","data-src","unitImageAlt","index","UnitListItem","memo","images","image","alt","UnitList","SortableCol","search","icon","UnitsRoute","history","useHistory","useState","setUnits","formInitialValues","setFormInitialValues","fetchAll","onSubmit","push","enableReinitialize","scope","App","basename","path","library","add","fab","fas","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb321f67.chunk.js","sourcesContent":["export const routePaths = {\n  units: '/',\n  about: '/about',\n}\n","import { ReactNode } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport classnames from 'classnames'\nimport styled from 'styled-components'\n\nimport { routePaths } from '../../config/route-defs'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst Container = styled.div`\n  min-height: 100vh;\n`\n\nexport default function Layout({ children }: Props) {\n  const { pathname } = useLocation()\n\n  return (\n    <Container>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n        <div className=\"container\">\n          <Link to={routePaths.units} className=\"navbar-brand\">\n            FKG LIST\n          </Link>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link\n                  to={routePaths.units}\n                  className={classnames('nav-link', { active: pathname === routePaths.units })}\n                >\n                  Home\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  to={routePaths.about}\n                  className={classnames('nav-link', { active: pathname === routePaths.about })}\n                >\n                  About\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"container\">{children}</div>\n    </Container>\n  )\n}\n","import Layout from '../../components/layout'\n\nexport default function AboutRoute() {\n  return (\n    <Layout>\n      <div>About</div>\n    </Layout>\n  )\n}\n","import { ILazyLoadInstance } from 'vanilla-lazyload'\nimport { Unit } from 'fkg-list-types'\n\nexport enum SortDirection {\n  ascending = 'asc',\n  descending = 'desc',\n}\n\nexport namespace FormData {\n  export interface FilterUnits {\n    keyword: string\n    star: Unit.Star[]\n    sortKey: string\n    sortDirection: SortDirection\n    favorite: Unit.Favorite[]\n    attribute: Unit.Attribute[]\n  }\n}\n\nexport interface ApiFlowerKnightGirl extends Unit.Simple, Unit.SimpleDetails, Unit.ImageUrls {}\n\nexport interface FlowerKnightGirl extends ApiFlowerKnightGirl {\n  id: string\n  totalStats: number\n}\n\ndeclare global {\n  export interface Document {\n    lazyLoadInstance: ILazyLoadInstance\n  }\n}\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\n\nexport class Client {\n  client: AxiosInstance\n\n  constructor(client: AxiosInstance) {\n    this.client = client\n  }\n\n  async request<Data>(config: AxiosRequestConfig): Promise<Data> {\n    const response = await this.client.request<Data>(config)\n    return response.data\n  }\n}\n\nconst httpClient = axios.create({\n  baseURL: process.env.PUBLIC_URL,\n  timeout: 15000,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n})\n\nexport const client = new Client(httpClient)\n","import { ApiFlowerKnightGirl, FlowerKnightGirl, FormData, SortDirection } from '../types'\n\nimport { client } from './client'\n\nclass Api {\n  private cache: FlowerKnightGirl[] | null = null\n\n  async fetchAll(filter: FormData.FilterUnits) {\n    let units = await this.fetchUnits()\n\n    if (filter.star.length > 0) {\n      units = units.filter((unit) => filter.star.includes(unit.star))\n    }\n\n    if (filter.attribute.length > 0) {\n      units = units.filter((unit) => filter.attribute.includes(unit.attribute))\n    }\n\n    if (filter.favorite.length > 0) {\n      units = units.filter((unit) => filter.favorite.includes(unit.favorite))\n    }\n\n    if (filter.keyword) {\n      units = units.filter((unit) => unit.name.includes(filter.keyword) || unit.code.includes(filter.keyword))\n    }\n\n    units.sort((firstUnit, secondUnit) => {\n      if (filter.sortDirection === SortDirection.ascending) {\n        // @ts-expect-error\n        return firstUnit[filter.sortKey] - secondUnit[filter.sortKey]\n      }\n\n      // @ts-expect-error\n      return secondUnit[filter.sortKey] - firstUnit[filter.sortKey]\n    })\n\n    return units\n  }\n\n  private async fetchUnits() {\n    if (!this.cache) {\n      const units = await client.request<ApiFlowerKnightGirl[]>({\n        method: 'get',\n        url: '/units-simple.json',\n      })\n\n      this.cache = units.map((unit) => ({\n        ...unit,\n        id: `${unit.code}-${unit.star}`,\n        totalStats: unit.hp + unit.attack + unit.defense,\n      }))\n    }\n\n    return this.cache.slice()\n  }\n}\n\nexport const UnitApi = new Api()\n","import { array, number, object, SchemaOf, string } from 'yup'\nimport queryString from 'query-string'\nimport { validateYupSchema, yupToFormErrors } from 'formik'\nimport { Unit } from 'fkg-list-types'\n\nimport { FormData, SortDirection } from '../../types'\n\n// @ts-expect-error\nexport const validationSchema: SchemaOf<FormData.FilterUnits> = object({\n  keyword: string().required(),\n  star: array()\n    .of(number().oneOf([2, 3, 4, 5, 6]))\n    .required(),\n  sortKey: string().required().oneOf(['totalStats', 'code']),\n  sortDirection: string().oneOf([SortDirection.ascending, SortDirection.descending]).required(),\n  attribute: array()\n    .of(number().oneOf([Unit.Attribute.blue, Unit.Attribute.red, Unit.Attribute.violet, Unit.Attribute.yellow]))\n    .required(),\n  favorite: array()\n    .of(number().oneOf([Unit.Favorite.book, Unit.Favorite.cake, Unit.Favorite.doll, Unit.Favorite.jewel]))\n    .required(),\n})\n\nexport const initialValues: FormData.FilterUnits = {\n  keyword: '',\n  attribute: [],\n  favorite: [],\n  sortDirection: SortDirection.ascending,\n  sortKey: 'totalStats',\n  star: [],\n}\n\nexport const fromQuery = async (query: string): Promise<FormData.FilterUnits> => {\n  const params = queryString.parse(query)\n  const form = {\n    keyword: params.q,\n    star: params.rarity && [params.rarity].flat(),\n    sortKey: params.sort,\n    sortDirection: params.order,\n    favorite: params.favorite && [params.favorite].flat(),\n    attribute: params.attribute && [params.attribute].flat(),\n  }\n\n  return validateYupSchema(form, validationSchema)\n    .then(() => {\n      return validationSchema.cast(form) as any\n    })\n    .catch((yupErrors, ...args) => {\n      const errors = yupToFormErrors<FormData.FilterUnits>(yupErrors)\n      return Object.fromEntries(\n        Object.entries(initialValues).map(([attr, value]) => {\n          // @ts-expect-error\n          if (errors[attr]) {\n            return [attr, value]\n          }\n\n          return [attr, validationSchema.pick([attr]).cast(form)[attr]]\n        })\n      )\n    })\n}\n\nexport const toQuery = (form: FormData.FilterUnits) => {\n  const params = {\n    q: form.keyword,\n    rarity: form.star,\n    sort: form.sortKey,\n    order: form.sortDirection,\n    favorite: form.favorite,\n    attribute: form.attribute,\n  }\n  return queryString.stringify(params)\n}\n","import { Unit } from 'fkg-list-types'\n\nimport { FlowerKnightGirl } from '../../types'\n\nexport const attributeText = (value: Unit.Attribute): string => {\n  switch (value) {\n    case Unit.Attribute.blue:\n      return '打'\n\n    case Unit.Attribute.red:\n      return '斬'\n\n    case Unit.Attribute.yellow:\n      return '突'\n\n    default:\n      return '魔'\n  }\n}\n\nexport const favoriteText = (value: Unit.Favorite): string => {\n  switch (value) {\n    case Unit.Favorite.cake:\n      return 'ケーキ'\n\n    case Unit.Favorite.book:\n      return '本'\n\n    case Unit.Favorite.doll:\n      return 'ぬいぐるみ'\n\n    default:\n      return '宝石'\n  }\n}\n\nexport const totalStats = (unit: FlowerKnightGirl) => unit.hp + unit.attack + unit.defense\n","import { Unit } from 'fkg-list-types'\nimport { Field, Form, useFormikContext } from 'formik'\nimport { toString } from 'lodash'\nimport styled from 'styled-components'\n\nimport { FormData } from '../../../types'\nimport { attributeText, favoriteText } from '../units.utils'\n\nconst Select = styled.select`\n  min-width: 200px;\n`\n\nconst getSelectValue = (value: any[]) => {\n  if (value.length > 0) {\n    return {\n      value: value.map(toString),\n    }\n  }\n\n  return {\n    defaultValue: [''],\n  }\n}\n\nexport function FilterForm() {\n  const { handleChange, values } = useFormikContext<FormData.FilterUnits>()\n\n  return (\n    <Form className=\"mt-4\">\n      <div className=\"mb-3 row\">\n        <label htmlFor=\"keyword\" className=\"col col-form-label flex-grow-0\">\n          Keyword\n        </label>\n\n        <div className=\"col\">\n          <Field type=\"text\" className=\"form-control\" name=\"keyword\" placeholder=\"Unit ID or Name\" />\n        </div>\n      </div>\n      {/* <div className=\"form-check form-check-inline\">\n        <Field type=\"checkbox\" name=\"star\" value={Unit.Attribute.blue} className=\"form-check-input\" />\n        <label className=\"form-check-label\">{attributeText(Unit.Attribute.blue)}</label>\n      </div>\n      <div className=\"form-check form-check-inline\">\n        <Field type=\"checkbox\" name=\"star\" value={Unit.Attribute.red} className=\"form-check-input\" />\n        <label className=\"form-check-label\">{attributeText(Unit.Attribute.red)}</label>\n      </div>\n      <div className=\"form-check form-check-inline\">\n        <Field type=\"checkbox\" name=\"star\" value={Unit.Attribute.yellow} className=\"form-check-input\" />\n        <label className=\"form-check-label\">{attributeText(Unit.Attribute.yellow)}</label>\n      </div>\n      <div className=\"form-check form-check-inline\">\n        <Field type=\"checkbox\" name=\"star\" value={Unit.Attribute.violet} className=\"form-check-input\" />\n        <label className=\"form-check-label\">{attributeText(Unit.Attribute.violet)}</label>\n      </div> */}\n      <div className=\"row\">\n        <div className=\"col-4 text-center\">\n          <label className=\"mx-auto\">レアリティー</label>\n          <Select\n            className=\"form-select w-auto mx-auto\"\n            multiple\n            aria-label=\"multiple select example\"\n            onChange={handleChange('star')}\n            {...getSelectValue(values.star)}\n          >\n            <option value=\"\">すべて</option>\n            <option value=\"2\">★2</option>\n            <option value=\"3\">★3</option>\n            <option value=\"4\">★4</option>\n            <option value=\"5\">★5</option>\n            <option value=\"6\">★6</option>\n          </Select>\n        </div>\n\n        <div className=\"col-4 text-center\">\n          <label className=\"mx-auto\">属性</label>\n          <Select\n            className=\"form-select w-auto mx-auto\"\n            multiple\n            aria-label=\"multiple select example\"\n            onChange={handleChange('attribute')}\n            {...getSelectValue(values.attribute)}\n          >\n            <option value=\"\">すべて</option>\n            <option value={Unit.Attribute.blue}>{attributeText(Unit.Attribute.blue)}</option>\n            <option value={Unit.Attribute.red}>{attributeText(Unit.Attribute.red)}</option>\n            <option value={Unit.Attribute.yellow}>{attributeText(Unit.Attribute.yellow)}</option>\n            <option value={Unit.Attribute.violet}>{attributeText(Unit.Attribute.violet)}</option>\n          </Select>\n        </div>\n\n        <div className=\"col-4 text-center\">\n          <label className=\"mx-auto\">好きな物</label>\n          <Select\n            className=\"form-select w-auto mx-auto\"\n            multiple\n            aria-label=\"multiple select example\"\n            onChange={handleChange('favorite')}\n            {...getSelectValue(values.favorite)}\n          >\n            <option value=\"\">すべて</option>\n            <option value={Unit.Favorite.book}>{favoriteText(Unit.Favorite.book)}</option>\n            <option value={Unit.Favorite.cake}>{favoriteText(Unit.Favorite.cake)}</option>\n            <option value={Unit.Favorite.doll}>{favoriteText(Unit.Favorite.doll)}</option>\n            <option value={Unit.Favorite.jewel}>{favoriteText(Unit.Favorite.jewel)}</option>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"text-center my-4\">\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Filter\n        </button>\n      </div>\n    </Form>\n  )\n}\n","import { HTMLProps, useEffect } from 'react'\nimport LazyLoad from 'vanilla-lazyload'\nimport classnames from 'classnames'\n\nif (!document.lazyLoadInstance) {\n  document.lazyLoadInstance = new LazyLoad()\n}\n\ninterface Props extends HTMLProps<HTMLImageElement> {\n  placeholderSrc: string\n}\n\nexport default function LazyImage({ src, placeholderSrc, className, ...props }: Props) {\n  useEffect(() => {\n    document.lazyLoadInstance.update()\n  }, [])\n\n  // eslint-disable-next-line jsx-a11y/alt-text\n  return <img {...props} src={placeholderSrc} data-src={src} className={classnames('lazy', className)} />\n}\n","import { memo } from 'react'\nimport styled from 'styled-components'\n\nimport LazyImage from '../../../components/lazy-image'\nimport { FlowerKnightGirl } from '../../../types'\nimport { attributeText, favoriteText, totalStats } from '../units.utils'\n\ninterface UnitListItemProps {\n  unit: FlowerKnightGirl\n}\n\nconst UnitImage = styled(LazyImage)`\n  width: 50px;\n`\n\nconst unitImageAlt = (index: number) => {\n  switch (index) {\n    case 0:\n      return '進化前'\n    case 1:\n      return '進化後'\n    default:\n      return '開花後'\n  }\n}\n\nconst UnitListItem = memo(function UnitListItem({ unit }: UnitListItemProps) {\n  return (\n    <tr key={unit.id}>\n      <td>{unit.code}</td>\n      <td>\n        {unit.images.map((image, index) => (\n          <UnitImage\n            key={image.url}\n            src={image.url}\n            placeholderSrc=\"https://via.placeholder.com/50x50\"\n            alt={unitImageAlt(index)}\n          />\n        ))}\n      </td>\n      <td>{unit.name}</td>\n      <td>{attributeText(unit.attribute)}</td>\n      <td>★{unit.star}</td>\n      <td>{totalStats(unit)}</td>\n      <td>{unit.hp}</td>\n      <td>{unit.attack}</td>\n      <td>{unit.defense}</td>\n      <td>{favoriteText(unit.favorite)}</td>\n    </tr>\n  )\n})\n\ninterface UnitListProps {\n  units: FlowerKnightGirl[]\n}\n\nexport const UnitList = memo(function UnitList({ units }: UnitListProps) {\n  return (\n    <>\n      {units.map((unit) => (\n        <UnitListItem key={unit.id} unit={unit} />\n      ))}\n    </>\n  )\n})\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useFormikContext } from 'formik'\nimport { ReactNode } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { routePaths } from '../../../config/route-defs'\nimport { FormData, SortDirection } from '../../../types'\nimport { toQuery } from '../units.form'\n\ninterface Props {\n  sortKey: string\n  children: ReactNode\n}\n\nexport function SortableCol({ sortKey, children }: Props) {\n  const { values } = useFormikContext<FormData.FilterUnits>()\n\n  return (\n    <Link\n      to={{\n        pathname: routePaths.units,\n        search: toQuery({\n          ...values,\n          sortDirection:\n            values.sortDirection === SortDirection.ascending ? SortDirection.descending : SortDirection.ascending,\n          sortKey,\n        }),\n      }}\n      className=\"text-decoration-none\"\n    >\n      <span className=\"link-dark\">{children}</span>\n      <FontAwesomeIcon icon=\"sort\" className=\"ms-2\" />\n    </Link>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router'\nimport { Formik } from 'formik'\n\nimport Layout from '../../components/layout'\nimport { routePaths } from '../../config/route-defs'\nimport { FlowerKnightGirl, FormData } from '../../types'\nimport { UnitApi } from '../../api/unit-api'\n\nimport { fromQuery, initialValues, toQuery } from './units.form'\nimport { FilterForm } from './components/filter-form'\nimport { UnitList } from './components/unit-list'\nimport { SortableCol } from './components/sortable-col'\n\nexport default function UnitsRoute() {\n  const { search } = useLocation()\n  const history = useHistory()\n  const [units, setUnits] = useState<FlowerKnightGirl[]>([])\n  const [formInitialValues, setFormInitialValues] = useState<FormData.FilterUnits>(initialValues)\n\n  useEffect(() => {\n    async function fetchUnits() {\n      const form = await fromQuery(search)\n      setFormInitialValues(form)\n      const response = await UnitApi.fetchAll(form)\n      setUnits(response)\n    }\n\n    fetchUnits()\n  }, [search, setUnits])\n\n  return (\n    <Layout>\n      <Formik\n        initialValues={formInitialValues}\n        onSubmit={(form) => {\n          history.push({\n            pathname: routePaths.units,\n            search: toQuery(form),\n          })\n        }}\n        enableReinitialize\n      >\n        <>\n          <FilterForm />\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"code\">#</SortableCol>\n                </th>\n                <th scope=\"col\">アバター</th>\n                <th scope=\"col\">名前</th>\n                <th scope=\"col\">属性</th>\n                <th scope=\"col\">レア度</th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"totalStats\">総合力</SortableCol>\n                </th>\n                <th scope=\"col\">HP</th>\n                <th scope=\"col\">攻撃力</th>\n                <th scope=\"col\">防御力</th>\n                <th scope=\"col\">好きな物</th>\n              </tr>\n            </thead>\n            <tbody>\n              <UnitList units={units} />\n            </tbody>\n          </table>\n        </>\n      </Formik>\n    </Layout>\n  )\n}\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport AboutRoute from './routes/about'\nimport UnitsRoute from './routes/units'\n\nexport default function App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/about\">\n          <AboutRoute />\n        </Route>\n        <Route path=\"/\">\n          <UnitsRoute />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { fas } from '@fortawesome/free-solid-svg-icons'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport './index.css'\nimport App from './App'\n// import reportWebVitals from './reportWebVitals'\n\nlibrary.add(fab, fas)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n"],"sourceRoot":""}
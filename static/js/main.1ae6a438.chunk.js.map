{"version":3,"sources":["../../fkg-list-types/build/fkg-list-types.js","../../fkg-list-shared/build/logger/index.js","../../fkg-list-shared/build/utils/index.js","../../fkg-list-shared/build/utils/delay.js","utils/logger/index.ts","config/initializers/001-logger.ts","config/initializers/010-font-awesome.ts","locale/index.tsx","config/route-defs.ts","utils/persist-context/persist-context.tsx","components/layout/layout.tsx","utils/page-title/index.ts","routes/about/about-route.tsx","types.ts","domain/unit.ts","api/client.ts","api/unit-api.ts","components/remote-data/use-remote-data.ts","components/loading/loading.tsx","components/remote-data/remote-data.tsx","routes/units/units.form.ts","routes/units/components/filter-form.tsx","components/lazy-image/lazy-loader.ts","components/lazy-load/lazy-load.tsx","routes/units/components/unit-list.tsx","components/lazy-image/lazy-image.tsx","routes/units/components/sortable-col.tsx","routes/units/units-route.tsx","app.tsx","index.tsx","../../fkg-list-shared/build/fkg-list-shared.js"],"names":["Object","defineProperty","exports","value","Unit","Enhancement","Attribute","Favorite","Family","Upgradability","LogLevel","createLogger","logHandle","get","target","prop","level","Reflect","apply","arguments","driver","Proxy","__createBinding","this","create","o","m","k","k2","undefined","enumerable","__exportStar","p","prototype","hasOwnProperty","call","require","delay","time","Promise","resolve","setTimeout","consoleDriver","debug","error","console","log","info","logger","library","add","faSpinner","faSort","faSortUp","faSortDown","Language","routePaths","loadTranslations","language","a","english","LanguageContext","initialValue","persistConfig","key","version","persistKey","Context","createContext","state","PersistedProvider","props","useState","rawPersistedState","localStorage","getItem","JSON","parse","e","getPersistState","setState","persistThenSetNewState","useCallback","newState","setItem","stringify","persistState","Provider","createPersistContext","browserLanguage","navigator","Intl","Locale","japanese","getBrowserLanguage","useLanguage","useContext","changeLanguage","window","location","reload","Container","styled","div","Layout","children","pathname","useLocation","currentLanguage","onLanguageChange","className","to","id","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","classnames","active","role","aria-labelledby","map","onClick","disabled","useTitle","title","useEffect","document","AboutRoute","intl","useIntl","formatMessage","SortDirection","unit","code","star","totalStats","hp","attack","defense","attributeColor","attribute","blue","red","violet","FormData","client","config","request","response","data","axios","baseURL","process","timeout","headers","Accept","UnitApi","cache","filter","fetchUnits","units","length","includes","favorite","keyword","name","sort","firstUnit","secondUnit","sortDirection","ascending","sortKey","method","url","params","timestamp","Date","getTime","toString","unitModel","slice","useRemoteData","defaultValue","isFetching","currentState","then","catch","Loading","size","icon","spin","RemoteData","fetching","render","Renderer","fallback","validationSchema","object","string","required","array","of","number","oneOf","descending","yellow","book","cake","doll","jewel","initialValues","fromQuery","query","queryString","form","q","rarity","flat","order","validateYupSchema","cast","yupErrors","errors","yupToFormErrors","fromEntries","entries","attr","pick","toQuery","Select","select","getSelectValue","v","KeywordLabel","label","FilterForm","useFormikContext","handleChange","values","htmlFor","placeholder","multiple","onChange","style","color","lazyLoadInstance","LazyLoad","queue","Bus","debounce","subscribe","update","lazyloader","push","height","classNamePrefix","ref","setRef","visible","ReactLazyLoad","UnitImage","src","placeholderSrc","data-src","UnitListItem","ordinal","images","image","index","alt","UnitList","memo","SortIcon","isSorting","direction","SortableCol","search","UnitsRoute","history","useHistory","formInitialValues","setFormInitialValues","fetchAll","forceLazyload","onSubmit","enableReinitialize","scope","App","messages","locale","basename","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ae6a438.chunk.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Unit = void 0;\nvar Unit;\n(function (Unit) {\n    var Enhancement;\n    (function (Enhancement) {\n        Enhancement[Enhancement[\"twoSteps\"] = 0] = \"twoSteps\";\n        /**\n         * 開花(能力のみ)\n         */\n        Enhancement[Enhancement[\"threeSteps\"] = 1] = \"threeSteps\";\n        /**\n         * 開花\n         */\n        Enhancement[Enhancement[\"threeStepsWithArt\"] = 2] = \"threeStepsWithArt\";\n    })(Enhancement = Unit.Enhancement || (Unit.Enhancement = {}));\n    var Attribute;\n    (function (Attribute) {\n        /**\n         * 打\n         */\n        Attribute[Attribute[\"blue\"] = 1] = \"blue\";\n        /**\n         * 斬\n         */\n        Attribute[Attribute[\"red\"] = 2] = \"red\";\n        /**\n         * 突\n         */\n        Attribute[Attribute[\"yellow\"] = 3] = \"yellow\";\n        /**\n         * 魔\n         */\n        Attribute[Attribute[\"violet\"] = 4] = \"violet\";\n    })(Attribute = Unit.Attribute || (Unit.Attribute = {}));\n    var Favorite;\n    (function (Favorite) {\n        /**\n         * ケーキ\n         */\n        Favorite[Favorite[\"cake\"] = 1] = \"cake\";\n        /**\n         * 本\n         */\n        Favorite[Favorite[\"book\"] = 2] = \"book\";\n        /**\n         * ぬいぐるみ\n         */\n        Favorite[Favorite[\"doll\"] = 3] = \"doll\";\n        /**\n         * 宝石\n         */\n        Favorite[Favorite[\"jewel\"] = 4] = \"jewel\";\n    })(Favorite = Unit.Favorite || (Unit.Favorite = {}));\n    var Family;\n    (function (Family) {\n        /**\n         * ウィンターローズ\n         */\n        Family[Family[\"winterRose\"] = 1] = \"winterRose\";\n        /**\n         * バナナオーシャン\n         */\n        Family[Family[\"bananaOcean\"] = 2] = \"bananaOcean\";\n        /**\n         * ブロッサムヒル\n         */\n        Family[Family[\"blossomHill\"] = 3] = \"blossomHill\";\n        /**\n         * ベルガモットバレー\n         */\n        Family[Family[\"bergamotValley\"] = 4] = \"bergamotValley\";\n        /**\n         * リリィウッド\n         */\n        Family[Family[\"lilywood\"] = 5] = \"lilywood\";\n        /**\n         * ロータスレイク\n         */\n        Family[Family[\"lotusLake\"] = 6] = \"lotusLake\";\n    })(Family = Unit.Family || (Unit.Family = {}));\n    var Upgradability;\n    (function (Upgradability) {\n        Upgradability[Upgradability[\"none\"] = 0] = \"none\";\n        /**\n         * 昇華\n         */\n        Upgradability[Upgradability[\"promoteToSixStars\"] = 1] = \"promoteToSixStars\";\n    })(Upgradability = Unit.Upgradability || (Unit.Upgradability = {}));\n    // export interface Full {\n    //   code: string\n    //   name: string\n    //   images: [Image, Image, Image]\n    //   star: Star\n    //   enhancement: Enhancement\n    //   attribute: Attribute\n    //   hp: number\n    //   attack: number\n    //   defense: number\n    //   speed: number\n    //   family: string\n    //   favorite: Favorite\n    //   skills: string[]\n    // }\n})(Unit = exports.Unit || (exports.Unit = {}));\n","\"use strict\";\n/* eslint-disable prefer-rest-params */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogger = exports.LogLevel = void 0;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"error\"] = 90] = \"error\";\n    LogLevel[LogLevel[\"info\"] = 60] = \"info\";\n    LogLevel[LogLevel[\"debug\"] = 20] = \"debug\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nvar logHandle = {\n    get: function (target, prop) {\n        if (LogLevel[prop] < target.level) {\n            return function () { };\n        }\n        // @ts-expect-error\n        return Reflect.get.apply(Reflect, arguments);\n    },\n};\nvar createLogger = function (driver) { return new Proxy(driver, logHandle); };\nexports.createLogger = createLogger;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./delay\"), exports);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.delay = void 0;\nvar delay = function (time) {\n    return new Promise(function (resolve) { return setTimeout(resolve, time); });\n};\nexports.delay = delay;\n","import { LogDriver, LogLevel, createLogger } from 'fkg-list-shared'\n\nconst consoleDriver: LogDriver = {\n  level: LogLevel.debug,\n  error: console.error,\n  debug: console.log,\n  info: console.log,\n}\n\nexport const logger = createLogger(consoleDriver)\n","import { LogLevel } from 'fkg-list-shared'\n\nimport { logger } from '../../utils/logger'\n\nif (process.env.NODE_ENV === 'development') {\n  logger.level = LogLevel.debug\n} else {\n  logger.level = LogLevel.info\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faSpinner, faSort, faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faSpinner, faSort, faSortUp, faSortDown)\n","import { useCallback, useContext } from 'react'\n\nimport { createPersistContext } from '../utils/persist-context'\n\nexport enum Language {\n  english = 'en',\n  japanese = 'ja',\n}\n\nexport const loadTranslations = async (language: string) => {\n  switch (language) {\n    case Language.english:\n      return import('./translations/en.json')\n\n    default:\n      return import('./translations/ja.json')\n  }\n}\n\nexport const getBrowserLanguage = () => {\n  const browserLanguage = navigator.language\n  try {\n    // @ts-expect-error\n    return new Intl.Locale(browserLanguage).language\n  } catch {\n    return Language.japanese\n  }\n}\n\nexport const LanguageContext = createPersistContext<Language>(getBrowserLanguage() || Language.japanese, {\n  key: 'language',\n  version: 1,\n})\n\nexport const useLanguage = (): [Language, (language: Language) => void] => {\n  const [language, changeLanguage] = useContext(LanguageContext)\n\n  const onLanguageChange = useCallback(\n    (language: Language) => {\n      changeLanguage(language)\n      window.location.reload()\n    },\n    [changeLanguage]\n  )\n\n  return [language, onLanguageChange]\n}\n","export const routePaths = {\n  units: '/',\n  about: '/about',\n}\n","import { Context as ReactContext, createContext, FC, ProviderProps, useCallback, useState } from 'react'\n\nimport { logger } from '../logger'\n\ninterface PersistConfig {\n  key: string\n  version?: number\n}\n\ntype PersistedContextValue<T> = [T, (state: T) => void]\n\ninterface PersistContext<T> extends ReactContext<PersistedContextValue<T>> {\n  PersistedProvider: FC<Omit<ProviderProps<T>, 'value'>>\n}\n\nexport function createPersistContext<T>(initialValue: T, persistConfig: PersistConfig): PersistContext<T> {\n  const { key, version = 0 } = persistConfig\n  const persistKey = `${key}-v${version}`\n\n  const getPersistState = (): T | null => {\n    const rawPersistedState = localStorage.getItem(persistKey) || 'null'\n    try {\n      return JSON.parse(rawPersistedState) as T\n    } catch (e) {\n      logger.debug('Failed to rehydrate state: ', rawPersistedState, ', with key: ', persistKey)\n      return null\n    }\n  }\n\n  const persistState = (state: T) => {\n    localStorage.setItem(persistKey, JSON.stringify(state))\n  }\n\n  const Context = createContext<PersistedContextValue<T>>([initialValue, (state) => {}])\n\n  const PersistedContextProvider = (props: Omit<ProviderProps<T>, 'value'>): JSX.Element => {\n    const [state, setState] = useState<T>(getPersistState() || initialValue)\n\n    const persistThenSetNewState = useCallback(\n      (newState: T) => {\n        persistState(newState)\n        setState(newState)\n      },\n      [setState]\n    )\n\n    return <Context.Provider {...props} value={[state, persistThenSetNewState]} />\n  }\n\n  // @ts-expect-error\n  Context.PersistedProvider = PersistedContextProvider\n\n  return Context as PersistContext<T>\n}\n","import { ReactNode } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport classnames from 'classnames'\nimport styled from 'styled-components'\nimport { FormattedMessage } from 'react-intl'\n\nimport { routePaths } from '../../config/route-defs'\nimport { Language, useLanguage } from '../../locale'\n\ninterface Props {\n  children: ReactNode\n}\n\nconst Container = styled.div`\n  min-height: 100vh;\n`\n\nexport default function Layout({ children }: Props) {\n  const { pathname } = useLocation()\n  const [currentLanguage, onLanguageChange] = useLanguage()\n\n  return (\n    <Container className=\"animate__animated animate__fadeIn\">\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\n        <div className=\"container\">\n          <Link to={routePaths.units} className=\"navbar-brand\">\n            <FormattedMessage id=\"layout.brand\" />\n          </Link>\n\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav me-auto\">\n              <li className=\"nav-item\">\n                <Link\n                  to={routePaths.units}\n                  className={classnames('nav-link', { active: pathname === routePaths.units })}\n                >\n                  <FormattedMessage id=\"layout.units\" />\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link\n                  to={routePaths.about}\n                  className={classnames('nav-link', { active: pathname === routePaths.about })}\n                >\n                  <FormattedMessage id=\"layout.about\" />\n                </Link>\n              </li>\n            </ul>\n\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item dropdown\">\n                <span\n                  className=\"nav-link dropdown-toggle\"\n                  id=\"navbarDropdown\"\n                  role=\"button\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                >\n                  <FormattedMessage id=\"layout.language\" />\n                </span>\n                <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                  {[Language.english, Language.japanese].map((language) => (\n                    <li key={language}>\n                      <button\n                        className=\"dropdown-item\"\n                        type=\"button\"\n                        onClick={() => onLanguageChange(language)}\n                        disabled={language === currentLanguage}\n                      >\n                        <FormattedMessage id={`language.${language}`} />\n                      </button>\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"container\">{children}</div>\n    </Container>\n  )\n}\n","import { useEffect } from 'react'\n\nexport const useTitle = (title: string) => {\n  useEffect(() => {\n    document.title = title\n  }, [title])\n}\n","import { FormattedMessage, useIntl } from 'react-intl'\n\nimport Layout from '../../components/layout'\nimport { useTitle } from '../../utils/page-title'\n\nexport default function AboutRoute() {\n  const intl = useIntl()\n\n  useTitle(intl.formatMessage({ id: 'routes.about.title' }))\n\n  return (\n    <Layout>\n      <div>\n        <FormattedMessage id=\"routes.about.title\" />\n      </div>\n    </Layout>\n  )\n}\n","import { ILazyLoadInstance } from 'vanilla-lazyload'\nimport { Unit } from 'fkg-list-types'\n\nexport enum SortDirection {\n  ascending = 'asc',\n  descending = 'desc',\n}\n\nexport namespace FormData {\n  export interface FilterUnits {\n    keyword: string\n    star: Unit.Star[]\n    sortKey: string\n    sortDirection: SortDirection\n    favorite: Unit.Favorite[]\n    attribute: Unit.Attribute[]\n  }\n}\n\nexport interface ApiFlowerKnightGirl extends Unit.Simple, Unit.SimpleDetails, Unit.ImageUrls {}\n\nexport interface FlowerKnightGirl extends ApiFlowerKnightGirl {\n  id: string\n  totalStats: number\n}\n\ndeclare global {\n  export interface Document {\n    lazyLoadInstance: ILazyLoadInstance\n  }\n}\n","import { Unit } from 'fkg-list-types'\n\nimport { FlowerKnightGirl } from '../types'\n\nexport const id = (unit: Pick<FlowerKnightGirl, 'star' | 'code'>) => {\n  return `${unit.code}-${unit.star}`\n}\n\nexport const totalStats = (unit: Pick<FlowerKnightGirl, 'hp' | 'attack' | 'defense'>) => {\n  return unit.hp + unit.attack + unit.defense\n}\n\nexport const attributeColor = (unit: Pick<FlowerKnightGirl, 'attribute'>) => {\n  switch (unit.attribute) {\n    case Unit.Attribute.blue:\n      return 'blue'\n\n    case Unit.Attribute.red:\n      return 'red'\n\n    case Unit.Attribute.violet:\n      return 'purple'\n\n    default:\n      return 'orange'\n  }\n}\n","import axios, { AxiosInstance, AxiosRequestConfig } from 'axios'\n\nexport class Client {\n  client: AxiosInstance\n\n  constructor(client: AxiosInstance) {\n    this.client = client\n  }\n\n  async request<Data>(config: AxiosRequestConfig): Promise<Data> {\n    const response = await this.client.request<Data>(config)\n    return response.data\n  }\n}\n\nconst httpClient = axios.create({\n  baseURL: process.env.PUBLIC_URL,\n  timeout: 15000,\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n})\n\nexport const client = new Client(httpClient)\n","import * as unitModel from '../domain/unit'\nimport { ApiFlowerKnightGirl, FlowerKnightGirl, FormData, SortDirection } from '../types'\n\nimport { client } from './client'\n\nclass Api {\n  private cache: FlowerKnightGirl[] | null = null\n\n  async fetchAll(filter: FormData.FilterUnits) {\n    let units = await this.fetchUnits()\n\n    if (filter.star.length > 0) {\n      units = units.filter((unit) => filter.star.includes(unit.star))\n    }\n\n    if (filter.attribute.length > 0) {\n      units = units.filter((unit) => filter.attribute.includes(unit.attribute))\n    }\n\n    if (filter.favorite.length > 0) {\n      units = units.filter((unit) => filter.favorite.includes(unit.favorite))\n    }\n\n    if (filter.keyword) {\n      units = units.filter((unit) => unit.name.includes(filter.keyword) || unit.code.includes(filter.keyword))\n    }\n\n    units.sort((firstUnit, secondUnit) => {\n      if (filter.sortDirection === SortDirection.ascending) {\n        // @ts-expect-error\n        return firstUnit[filter.sortKey] - secondUnit[filter.sortKey]\n      }\n\n      // @ts-expect-error\n      return secondUnit[filter.sortKey] - firstUnit[filter.sortKey]\n    })\n\n    return units\n  }\n\n  private async fetchUnits() {\n    if (!this.cache) {\n      const units = await client.request<ApiFlowerKnightGirl[]>({\n        method: 'get',\n        url: '/units-simple.json',\n        params: {\n          timestamp: new Date().getTime().toString(),\n        },\n      })\n\n      this.cache = units.map((unit) => ({\n        ...unit,\n        id: unitModel.id(unit),\n        totalStats: unitModel.totalStats(unit),\n      }))\n    }\n\n    return this.cache.slice()\n  }\n}\n\nexport const UnitApi = new Api()\n","import { useEffect, useState } from 'react'\n\nimport { logger } from '../../utils/logger'\n\ntype Request<T> = () => Promise<T>\n\ntype State<T> = {\n  isFetching: boolean\n  data: T\n  error: Error | null\n}\n\nexport function useRemoteData<T, DefaultValue = null>(\n  request: Request<T>,\n  // @ts-expect-error\n  defaultValue: DefaultValue = null\n): [boolean, T | DefaultValue, Error | null] {\n  const [state, setState] = useState<State<T | DefaultValue>>({\n    isFetching: true,\n    error: null,\n    data: defaultValue,\n  })\n\n  useEffect(() => {\n    setState((currentState) => ({ ...currentState, isFetching: true }))\n    request()\n      .then((response) => {\n        logger.debug('response: ', response)\n        setState((currentState) => ({ ...currentState, isFetching: false, data: response }))\n      })\n      .catch((error) => {\n        setState((currentState) => ({ ...currentState, isFetching: false, error }))\n      })\n  }, [setState, request])\n\n  useEffect(() => {})\n\n  return [state.isFetching, state.data, state.error]\n}\n","import { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\nimport classnames from 'classnames'\n\ninterface Props {\n  size?: FontAwesomeIconProps['size']\n  className?: FontAwesomeIconProps['className']\n}\n\nexport const Loading = ({ size = '2x', className = undefined }: Props) => (\n  <div className={classnames('text-center my-3', { className })}>\n    <FontAwesomeIcon icon=\"spinner\" spin size={size} />\n  </div>\n)\n","import { ComponentType } from 'react'\n\nimport { Loading } from '../loading'\n\ninterface Props {\n  fetching: boolean\n  render?: () => JSX.Element | null\n  Renderer?: ComponentType<any>\n  fallback?: JSX.Element | null\n  children?: JSX.Element | null\n}\n\nexport function RemoteData({\n  fetching,\n  render,\n  Renderer,\n  fallback = <Loading size=\"3x\" />,\n  children = null,\n}: Props): JSX.Element | null {\n  if (fetching) {\n    return fallback\n  }\n\n  if (Renderer) {\n    return <Renderer />\n  }\n\n  if (render) {\n    return render()\n  }\n\n  return children\n}\n","import { array, number, object, SchemaOf, string } from 'yup'\nimport queryString from 'query-string'\nimport { validateYupSchema, yupToFormErrors } from 'formik'\nimport { Unit } from 'fkg-list-types'\n\nimport { FormData, SortDirection } from '../../types'\n\n// @ts-expect-error\nexport const validationSchema: SchemaOf<FormData.FilterUnits> = object({\n  keyword: string().required(),\n  star: array()\n    .of(number().oneOf([2, 3, 4, 5, 6]))\n    .required(),\n  sortKey: string().required().oneOf(['totalStats', 'code', 'star', 'attack', 'defense', 'hp']),\n  sortDirection: string().oneOf([SortDirection.ascending, SortDirection.descending]).required(),\n  attribute: array()\n    .of(number().oneOf([Unit.Attribute.blue, Unit.Attribute.red, Unit.Attribute.violet, Unit.Attribute.yellow]))\n    .required(),\n  favorite: array()\n    .of(number().oneOf([Unit.Favorite.book, Unit.Favorite.cake, Unit.Favorite.doll, Unit.Favorite.jewel]))\n    .required(),\n})\n\nexport const initialValues: FormData.FilterUnits = {\n  keyword: '',\n  attribute: [],\n  favorite: [],\n  sortDirection: SortDirection.ascending,\n  sortKey: 'totalStats',\n  star: [],\n}\n\nexport const fromQuery = async (query: string): Promise<FormData.FilterUnits> => {\n  const params = queryString.parse(query)\n  const form = {\n    keyword: params.q,\n    star: params.rarity && [params.rarity].flat(),\n    sortKey: params.sort,\n    sortDirection: params.order,\n    favorite: params.favorite && [params.favorite].flat(),\n    attribute: params.attribute && [params.attribute].flat(),\n  }\n\n  return validateYupSchema(form, validationSchema)\n    .then(() => {\n      return validationSchema.cast(form) as any\n    })\n    .catch((yupErrors, ...args) => {\n      const errors = yupToFormErrors<FormData.FilterUnits>(yupErrors)\n      return Object.fromEntries(\n        Object.entries(initialValues).map(([attr, value]) => {\n          // @ts-expect-error\n          if (errors[attr]) {\n            return [attr, value]\n          }\n\n          return [attr, validationSchema.pick([attr]).cast(form)[attr]]\n        })\n      )\n    })\n}\n\nexport const toQuery = (form: FormData.FilterUnits) => {\n  const params = {\n    q: form.keyword,\n    rarity: form.star,\n    sort: form.sortKey,\n    order: form.sortDirection,\n    favorite: form.favorite,\n    attribute: form.attribute,\n  }\n  return queryString.stringify(params)\n}\n","import { Unit } from 'fkg-list-types'\nimport { Field, Form, useFormikContext } from 'formik'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport styled from 'styled-components'\n\nimport { FormData } from '../../../types'\nimport { attributeColor } from '../../../domain/unit'\n\nconst Select = styled.select`\n  min-width: 200px;\n`\n\nconst getSelectValue = (value: any[]) => {\n  if (value.length > 0) {\n    return {\n      value: value.map((v) => v.toString()),\n    }\n  }\n\n  return {\n    defaultValue: [''],\n  }\n}\n\nconst KeywordLabel = styled.label`\n  word-break: keep-all;\n`\n\nexport function FilterForm() {\n  const { handleChange, values } = useFormikContext<FormData.FilterUnits>()\n  const intl = useIntl()\n\n  return (\n    <Form className=\"mt-4\">\n      <div className=\"mb-3 row\">\n        <KeywordLabel htmlFor=\"keyword\" className=\"col col-form-label flex-grow-0\">\n          <FormattedMessage id=\"routes.units.keyword\" />\n        </KeywordLabel>\n\n        <div className=\"col\">\n          <Field\n            type=\"text\"\n            className=\"form-control\"\n            name=\"keyword\"\n            placeholder={intl.formatMessage({ id: 'routes.units.keyword.placeholder' })}\n          />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4 text-center\">\n          <label className=\"mx-auto\">\n            <FormattedMessage id=\"unit.rarity\" />\n          </label>\n          <Select\n            className=\"form-select w-auto mx-auto\"\n            multiple\n            aria-label=\"multiple select example\"\n            onChange={handleChange('star')}\n            {...getSelectValue(values.star)}\n          >\n            <option value=\"\">{intl.formatMessage({ id: 'routes.units.selectAll' })}</option>\n            {[2, 3, 4, 5, 6].map((rarity) => (\n              <option value={rarity} key={rarity.toString()}>\n                {intl.formatMessage({ id: 'unit.rarity.value' }, { value: rarity })}\n              </option>\n            ))}\n          </Select>\n        </div>\n\n        <div className=\"col-4 text-center\">\n          <label className=\"mx-auto\">\n            <FormattedMessage id=\"unit.attribute\" />\n          </label>\n          <Select\n            className=\"form-select w-auto mx-auto\"\n            multiple\n            aria-label=\"multiple select example\"\n            onChange={handleChange('attribute')}\n            {...getSelectValue(values.attribute)}\n          >\n            <option value=\"\">{intl.formatMessage({ id: 'routes.units.selectAll' })}</option>\n            {[Unit.Attribute.blue, Unit.Attribute.red, Unit.Attribute.violet, Unit.Attribute.yellow].map(\n              (attribute) => (\n                <option value={attribute} key={attribute.toString()} style={{ color: attributeColor({ attribute }) }}>\n                  {intl.formatMessage({ id: `unit.attribute.${Unit.Attribute[attribute]}` })}\n                </option>\n              )\n            )}\n          </Select>\n        </div>\n\n        <div className=\"col-4 text-center\">\n          <label className=\"mx-auto\">\n            <FormattedMessage id=\"unit.favorite\" />\n          </label>\n          <Select\n            className=\"form-select w-auto mx-auto\"\n            multiple\n            aria-label=\"multiple select example\"\n            onChange={handleChange('favorite')}\n            {...getSelectValue(values.favorite)}\n          >\n            <option value=\"\">{intl.formatMessage({ id: 'routes.units.selectAll' })}</option>\n            {[Unit.Favorite.book, Unit.Favorite.cake, Unit.Favorite.doll, Unit.Favorite.jewel].map((favorite) => (\n              <option value={favorite} key={favorite.toString()}>\n                {intl.formatMessage({ id: `unit.favorite.${Unit.Favorite[favorite]}` })}\n              </option>\n            ))}\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"text-center my-4\">\n        <button type=\"submit\" className=\"btn btn-primary\">\n          <FormattedMessage id=\"routes.units.submit\" />\n        </button>\n      </div>\n    </Form>\n  )\n}\n","import LazyLoad from 'vanilla-lazyload'\nimport { Bus } from 'baconjs'\n\nimport { logger } from '../../utils/logger'\n\nconst lazyLoadInstance = new LazyLoad()\n\nconst queue = new Bus<string>()\nqueue.debounce(100).subscribe(() => {\n  logger.info('loading images')\n  lazyLoadInstance.update()\n})\n\nconst lazyloader = {\n  update() {\n    queue.push('1')\n  },\n}\n\nexport default lazyloader\n","/* eslint-disable no-nested-ternary */\nimport ReactLazyLoad from 'react-lazyload'\n\nexport default class LazyLoad extends ReactLazyLoad {\n  render() {\n    // @ts-expect-error\n    const { height, children, placeholder, className, classNamePrefix, style } = this.props\n\n    return (\n      // @ts-expect-error\n      <tr className={`${classNamePrefix}-wrapper ${className}`} ref={this.setRef} style={style}>\n        {/* @ts-expect-error */}\n        {this.visible\n          ? children\n          : placeholder || (\n              <td>\n                <div style={{ height }} className={`${classNamePrefix}-placeholder`} />\n              </td>\n            )}\n      </tr>\n    )\n  }\n}\n","import { Unit } from 'fkg-list-types'\nimport { memo } from 'react'\nimport { FormattedMessage, useIntl } from 'react-intl'\nimport styled from 'styled-components'\n\nimport LazyImage from '../../../components/lazy-image'\nimport LazyLoad from '../../../components/lazy-load'\nimport { attributeColor } from '../../../domain/unit'\nimport { FlowerKnightGirl } from '../../../types'\n\ninterface UnitListItemProps {\n  unit: FlowerKnightGirl\n  ordinal: number\n}\n\nconst UnitImage = styled(LazyImage)`\n  width: 50px;\n`\n\nfunction UnitListItem({ unit, ordinal }: UnitListItemProps) {\n  const intl = useIntl()\n\n  return (\n    <LazyLoad>\n      <td>{ordinal}</td>\n      <td>{unit.code}</td>\n      <td>\n        {unit.images.map((image, index) => (\n          <UnitImage\n            key={image.url}\n            src={image.url}\n            placeholderSrc=\"https://via.placeholder.com/50x50\"\n            alt={intl.formatMessage({ id: `unit.images.${index}` })}\n          />\n        ))}\n      </td>\n      <td>{unit.name}</td>\n      <td style={{ color: attributeColor(unit) }}>\n        <FormattedMessage id={`unit.attribute.${Unit.Attribute[unit.attribute]}`} />\n      </td>\n      <td>\n        <FormattedMessage id=\"unit.rarity.value\" values={{ value: unit.star }} />\n      </td>\n      <td>{unit.totalStats}</td>\n      <td>{unit.hp}</td>\n      <td>{unit.attack}</td>\n      <td>{unit.defense}</td>\n      <td>\n        <FormattedMessage id={`unit.favorite.${Unit.Favorite[unit.favorite]}`} />\n      </td>\n    </LazyLoad>\n  )\n}\n\ninterface UnitListProps {\n  units: FlowerKnightGirl[]\n}\n\nexport const UnitList = memo(function UnitList({ units }: UnitListProps) {\n  return (\n    <tbody className=\"animate__animated animate__fadeIn\">\n      {units.map((unit, index) => (\n        <UnitListItem key={unit.id} unit={unit} ordinal={index + 1} />\n      ))}\n    </tbody>\n  )\n})\n","/* eslint-disable jsx-a11y/alt-text */\nimport { HTMLProps, useEffect } from 'react'\nimport classnames from 'classnames'\n\nimport lazyloader from './lazy-loader'\n\ninterface Props extends HTMLProps<HTMLImageElement> {\n  placeholderSrc: string\n}\n\nexport default function LazyImage({ src, placeholderSrc, className, ...props }: Props) {\n  useEffect(() => {\n    lazyloader.update()\n  }, [])\n\n  // @ts-expect-error\n  return <img {...props} src={placeholderSrc} data-src={src} className={classnames('lazy', className)} />\n}\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { useFormikContext } from 'formik'\nimport { ReactNode } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { routePaths } from '../../../config/route-defs'\nimport { FormData, SortDirection } from '../../../types'\nimport { toQuery } from '../units.form'\n\ninterface Props {\n  sortKey: string\n  children: ReactNode\n}\n\nconst SortIcon = ({ isSorting, direction }: { isSorting: boolean; direction: SortDirection }) => {\n  if (!isSorting) {\n    return <FontAwesomeIcon icon=\"sort\" className=\"ms-2 text-muted\" />\n  }\n\n  if (direction === SortDirection.ascending) {\n    return <FontAwesomeIcon icon=\"sort-up\" className=\"ms-2\" />\n  }\n\n  return <FontAwesomeIcon icon=\"sort-down\" className=\"ms-2\" />\n}\n\nexport function SortableCol({ sortKey, children }: Props) {\n  const { values } = useFormikContext<FormData.FilterUnits>()\n\n  return (\n    <Link\n      to={{\n        pathname: routePaths.units,\n        search: toQuery({\n          ...values,\n          sortDirection:\n            values.sortDirection === SortDirection.ascending ? SortDirection.descending : SortDirection.ascending,\n          sortKey,\n        }),\n      }}\n      className=\"text-decoration-none\"\n    >\n      <span className=\"link-dark\">{children}</span>\n      <SortIcon isSorting={sortKey === values.sortKey} direction={values.sortDirection} />\n    </Link>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useHistory, useLocation } from 'react-router'\nimport { Formik } from 'formik'\nimport { forceCheck as forceLazyload } from 'react-lazyload'\nimport { FormattedMessage, useIntl } from 'react-intl'\n\nimport Layout from '../../components/layout'\nimport { routePaths } from '../../config/route-defs'\nimport { FlowerKnightGirl, FormData } from '../../types'\nimport { UnitApi } from '../../api/unit-api'\nimport { useTitle } from '../../utils/page-title'\nimport { RemoteData, useRemoteData } from '../../components/remote-data'\nimport { Loading } from '../../components/loading'\n\nimport { fromQuery, initialValues, toQuery } from './units.form'\nimport { FilterForm } from './components/filter-form'\nimport { UnitList } from './components/unit-list'\nimport { SortableCol } from './components/sortable-col'\n\nexport default function UnitsRoute() {\n  const { search } = useLocation()\n  const history = useHistory()\n  const [formInitialValues, setFormInitialValues] = useState<FormData.FilterUnits>(initialValues)\n  const intl = useIntl()\n\n  useTitle(intl.formatMessage({ id: 'routes.units.title' }))\n\n  const fetchUnit = useCallback<() => Promise<FlowerKnightGirl[]>>(async () => {\n    const form = await fromQuery(search)\n    setFormInitialValues(form)\n    return UnitApi.fetchAll(form)\n  }, [search])\n  const [isFetching, units] = useRemoteData(fetchUnit, [])\n\n  useEffect(() => {\n    forceLazyload()\n  }, [units])\n\n  return (\n    <Layout>\n      <Formik\n        initialValues={formInitialValues}\n        onSubmit={(form) => {\n          history.push({\n            pathname: routePaths.units,\n            search: toQuery(form),\n          })\n        }}\n        enableReinitialize\n      >\n        <>\n          <FilterForm />\n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th scope=\"col\">{}</th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"code\">\n                    <FormattedMessage id=\"unit.code\" />\n                  </SortableCol>\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage id=\"unit.images\" />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage id=\"unit.name\" />\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage id=\"unit.attribute\" />\n                </th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"star\">\n                    <FormattedMessage id=\"unit.rarity\" />\n                  </SortableCol>\n                </th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"totalStats\">\n                    <FormattedMessage id=\"unit.totalStats\" />\n                  </SortableCol>\n                </th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"hp\">\n                    <FormattedMessage id=\"unit.hp\" />\n                  </SortableCol>\n                </th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"attack\">\n                    <FormattedMessage id=\"unit.attack\" />\n                  </SortableCol>\n                </th>\n                <th scope=\"col\">\n                  <SortableCol sortKey=\"defense\">\n                    <FormattedMessage id=\"unit.defense\" />\n                  </SortableCol>\n                </th>\n                <th scope=\"col\">\n                  <FormattedMessage id=\"unit.favorite\" />\n                </th>\n              </tr>\n            </thead>\n            <RemoteData fetching={isFetching} fallback={null}>\n              <UnitList units={units} />\n            </RemoteData>\n          </table>\n          <RemoteData fetching={isFetching} fallback={<Loading size=\"2x\" />} />\n        </>\n      </Formik>\n    </Layout>\n  )\n}\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { IntlProvider } from 'react-intl'\nimport { useCallback } from 'react'\n\nimport AboutRoute from './routes/about'\nimport UnitsRoute from './routes/units'\nimport { loadTranslations, useLanguage } from './locale'\nimport { RemoteData, useRemoteData } from './components/remote-data'\n\nexport default function App() {\n  const [language] = useLanguage()\n\n  const request = useCallback(() => loadTranslations(language), [language])\n  const [isFetching, messages] = useRemoteData<any>(request)\n\n  const render = () => (\n    <IntlProvider locale={language} messages={messages}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/about\">\n            <AboutRoute />\n          </Route>\n          <Route path=\"/\">\n            <UnitsRoute />\n          </Route>\n        </Switch>\n      </Router>\n    </IntlProvider>\n  )\n\n  return <RemoteData render={render} fetching={isFetching} />\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './config/initializers'\nimport './index.css'\nimport 'animate.css/animate.min.css'\nimport App from './app'\nimport { LanguageContext } from './locale'\n// import reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <LanguageContext.PersistedProvider>\n      <App />\n    </LanguageContext.PersistedProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals()\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./logger\"), exports);\n__exportStar(require(\"./utils\"), exports);\n"],"sourceRoot":""}